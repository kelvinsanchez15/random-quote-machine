{"version":3,"sources":["index.js"],"names":["App","props","getNewQuote","getQuote","state","quote","author","this","axios","get","then","res","data","quotes","randomQuote","Math","floor","random","length","setState","className","id","title","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAQMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA2BRC,YAAc,WACZ,EAAKC,YA3BL,EAAKC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAJO,E,gEASjBC,KAAKJ,a,iCAGK,IAAD,OAITK,IAAMC,IAFJ,0IAEaC,MAAK,SAACC,GACnB,IAAIC,EAAOD,EAAIC,KAAKC,OAEhBC,EAAcF,EADHG,KAAKC,MAAMD,KAAKE,SAAWL,EAAKM,SAG/C,EAAKC,SAAS,CACZd,MAAOS,EAAW,MAClBR,OAAQQ,EAAW,c,+BASf,IAAD,EACmBP,KAAKH,MAAvBC,EADD,EACCA,MAAOC,EADR,EACQA,OACf,OACE,yBAAKc,UAAU,OACb,yBAAKC,GAAG,WACN,yBAAKA,GAAG,aACN,yBAAKA,GAAG,QACN,4BACE,kBAAC,IAAD,MADF,IACmBhB,IAGrB,yBAAKgB,GAAG,UACN,4BAAKf,GACL,8BAEF,yBAAKc,UAAU,WACb,6BACE,kBAAC,IAAD,CAAqBC,GAAG,cAAcC,MAAM,uBAE9C,6BACE,kBAAC,IAAD,CACED,GAAG,YACHC,MAAM,mBACNC,QAAShB,KAAKL,uB,GAxDdsB,cAmElBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3B,EAAD,OAEF4B,SAASC,eAAe,U","file":"static/js/main.eb2a3f33.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { AiFillTwitterCircle } from \"react-icons/ai\";\nimport { FaRedoAlt } from \"react-icons/fa\";\nimport { FaQuoteLeft } from \"react-icons/fa\";\nimport \"./index.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: \"\",\n      author: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getQuote();\n  }\n\n  getQuote() {\n    let url =\n      \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\n    axios.get(url).then((res) => {\n      let data = res.data.quotes;\n      let quoteNum = Math.floor(Math.random() * data.length);\n      let randomQuote = data[quoteNum];\n\n      this.setState({\n        quote: randomQuote[\"quote\"],\n        author: randomQuote[\"author\"],\n      });\n    });\n  }\n\n  getNewQuote = () => {\n    this.getQuote();\n  };\n\n  render() {\n    const { quote, author } = this.state;\n    return (\n      <div className=\"App\">\n        <div id=\"wrapper\">\n          <div id=\"quote-box\">\n            <div id=\"text\">\n              <h1>\n                <FaQuoteLeft /> {quote}\n              </h1>\n            </div>\n            <div id=\"author\">\n              <h2>{author}</h2>\n              <hr />\n            </div>\n            <div className=\"buttons\">\n              <div>\n                <AiFillTwitterCircle id=\"tweet-quote\" title=\"Tweet this quote!\" />\n              </div>\n              <div>\n                <FaRedoAlt\n                  id=\"new-quote\"\n                  title=\"Get a new quote!\"\n                  onClick={this.getNewQuote}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}